@page "/"
@using Newtonsoft.Json
@implements IDisposable

<PageTitle>Bagan Map</PageTitle>

<div id="map"></div>

@* <MudDrawer @bind-Open="@open" Anchor="@anchor" Elevation="1" Variant="@DrawerVariant.Temporary">
    <MudDrawerHeader>
        <MudText Typo="Typo.h6">My App</MudText>
    </MudDrawerHeader>
    <MudNavMenu>
        <MudNavLink Match="NavLinkMatch.All">Store</MudNavLink>
        <MudNavLink Match="NavLinkMatch.All">Library</MudNavLink>
        <MudNavLink Match="NavLinkMatch.All">Community</MudNavLink>
    </MudNavMenu>
</MudDrawer> *@

<Panel IsOpen=@lightDismissPanelOpen
       OnDismiss=@(() => lightDismissPanelOpen = !lightDismissPanelOpen)
       Type=@((PanelType)Enum.Parse(typeof(PanelType), panelTypeSelected?.Key!))
       CustomWidth=@customWidth
       IsLightDismiss="true"
       HeaderText="@(_head is null ? "" : (_head.PagodaMmName + " - " + _head.Id))">
    <NavigationTemplate>
        @* <IconButton OnClick=@(() => lightDismissPanelOpen = false) *@
        @*             IconName="navigation"/> *@
    </NavigationTemplate>
    <ChildContent>
        <p>
            @_detail.Description
            @* <code> *@
            @*     @if (_detail is not null) *@
            @*     { *@
            @*         @JsonConvert.SerializeObject(_detail, Formatting.Indented) *@
            @*     } *@
            @* </code> *@
        </p>
    </ChildContent>
</Panel>

@code {
    bool lightDismissPanelOpen = false;

    IDropdownOption? panelTypeSelected = new DropdownOption
        {
            Key = "Medium",
            Text = "Medium",
            ItemType = SelectableOptionMenuItemType.Normal
        };

    string customWidth = "500";

    bool open;
    Anchor anchor;

    void OpenDrawer(Anchor anchor = Anchor.Start)
    {
        open = true;
        this.anchor = anchor;
    }

}